{
  "swagger": "2.0",
  "info": {
    "title": "SqlManagementClient",
    "description": "The Azure SQL Database management API provides a RESTful set of web services that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.",
    "version": "2014-04-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "text/json"
  ],
  "produces": [
    "application/json",
    "text/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/import": {
      "post": {
        "tags": [
          "ImportExport"
        ],
        "operationId": "Servers_ImportDatabase",
        "description": "Imports a bacpac to Azure SQL Database.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImportRequestParameters"
            },
            "description": "The required parameters for importing a Bacpac into a database."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ImportExportOperationStatusResponse"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ImportExportOperationStatusResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/extensions/import": {
      "post": {
        "tags": [
          "ImportExport"
        ],
        "operationId": "Databases_Import",
        "description": "Imports a bacpac to Azure SQL Database.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database to import into"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImportExtensionRequestParameters"
            },
            "description": "The required parameters for importing a Bacpac into a database."
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ImportExportOperationStatusResponse"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ImportExportOperationStatusResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/export": {
      "post": {
        "tags": [
          "ImportExport"
        ],
        "operationId": "Databases_Export",
        "description": "Exports a Azure SQL Database to a bacpac.",
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database to be exported."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExportRequestParameters"
            },
            "description": "The required parameters for exporting a database."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ImportExportOperationStatusResponse"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ImportExportOperationStatusResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/disasterRecoveryConfiguration": {
      "get": {
        "tags": [
          "ServerDisasterRecoveryConfiguration"
        ],
        "operationId": "Servers_DisasterRecoveryConfiguration_List",
        "description": "Returns a list of Azure SQL Server disaster recovery configurations.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ServerDisasterRecoveryConfigurationList"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/disasterRecoveryConfiguration/{serverDisasterRecoveryConfigurationName}": {
      "get": {
        "tags": [
          "ServerDisasterRecoveryConfiguration"
        ],
        "operationId": "Servers_DisasterRecoveryConfiguration_Get",
        "description": "Returns information about an Azure SQL Server disaster recovery configurations.",
        "parameters": [
          {
            "name": "serverDisasterRecoveryConfigurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL server disaster recovery configuration to be retrieved."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ServerDisasterRecoveryConfiguration"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ServerDisasterRecoveryConfiguration"
        ],
        "operationId": "Servers_DisasterRecoveryConfiguration_Delete",
        "description": "Deletes the Azure SQL server disaster recovery configuration with the given name.",
        "parameters": [
          {
            "name": "serverDisasterRecoveryConfigurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL server disaster recovery configuration to be deleted."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "ServerDisasterRecoveryConfiguration"
        ],
        "operationId": "Servers_DisasterRecoveryConfiguration_CreateOrUpdate",
        "description": "Begins creating a new or updating an existing Azure SQL Server disaster recovery configuration. To determine the status of the operation call GetServerDisasterRecoveryConfigurationOperationStatus.",
        "parameters": [
          {
            "name": "serverDisasterRecoveryConfigurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL server disaster recovery configuration to be retrieved."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServerDisasterRecoveryConfigurationCreateOrUpdateParameters"
            },
            "description": "The required parameters for creating or updating a Server disaster recovery configuration."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ServerDisasterRecoveryConfiguration"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ServerDisasterRecoveryConfiguration"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/disasterRecoveryConfiguration/{serverDisasterRecoveryConfigurationName}/failover": {
      "post": {
        "tags": [
          "ServerDisasterRecoveryConfiguration"
        ],
        "operationId": "Servers_DisasterRecoveryConfiguration_Failover",
        "description": "Begins failover for the Azure SQL server disaster recovery configuration with the given name.",
        "parameters": [
          {
            "name": "serverDisasterRecoveryConfigurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL server disaster recovery configuration to start failover."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/disasterRecoveryConfiguration/{serverDisasterRecoveryConfigurationName}/forceFailoverAllowDataLoss": {
      "post": {
        "tags": [
          "ServerDisasterRecoveryConfiguration"
        ],
        "operationId": "Servers_DisasterRecoveryConfiguration_ForceFailoverAllowDataLoss",
        "description": "Begins failover for the Azure SQL server disaster recovery configuration with the given name.",
        "parameters": [
          {
            "name": "serverDisasterRecoveryConfigurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL server disaster recovery configuration to start failover."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/recoverableDatabases": {
      "get": {
        "tags": [
          "GeoBackup"
        ],
        "operationId": "DatabaseBackup_ListGeoBackup",
        "description": "Returns a list of Azure SQL Database geo backups.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GeoBackupList"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/recoverableDatabases/{databaseName}": {
      "get": {
        "tags": [
          "GeoBackup"
        ],
        "operationId": "DatabaseBackup_GetGeoBackup",
        "description": "Returns an Azure SQL Database geo backup.",
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database to retrieve geo backups for."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GeoBackup"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/restorableDroppedDatabases": {
      "get": {
        "tags": [
          "DeletedDatabaseBackup"
        ],
        "operationId": "DatabaseBackup_ListDeletedDatabaseBackups",
        "description": "Returns a list of Azure SQL deleted database backups (a resource representing a deleted database that can be restored).",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeletedDatabaseBackupList"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/restorableDroppedDatabases/{databaseName}": {
      "get": {
        "tags": [
          "DeletedDatabaseBackup"
        ],
        "operationId": "DatabaseBackup_GetDeletedDatabaseBackup",
        "description": "Returns an Azure SQL deleted database backup (a resource representing a deleted database that can be restored).",
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the restorable dropped Azure SQL Database to be retrieved."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeletedDatabaseBackup"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/auditingPolicies/Default": {
      "put": {
        "tags": [
          "AuditingPolicy"
        ],
        "operationId": "AuditingPolicy_CreateOrUpdateDatebasePolicy",
        "description": "Creates or updates an Azure SQL Database auditing policy.",
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database for which the auditing policy applies."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatabaseAuditingPolicyCreateOrUpdateParameters"
            },
            "description": "The required parameters for createing or updating a Azure SQL Database auditing policy."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DatabaseAuditingPolicy"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DatabaseAuditingPolicy"
            }
          }
        }
      },
      "get": {
        "tags": [
          "AuditingPolicy"
        ],
        "operationId": "AuditingPolicy_GetDatabasePolicy",
        "description": "Returns an Azure SQL Database auditing policy.",
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database for which the auditing policy applies."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DatabaseAuditingPolicy"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/auditingPolicies/Default": {
      "put": {
        "tags": [
          "AuditingPolicy"
        ],
        "operationId": "AuditingPolicy_CreateOrUpdateServerPolicy",
        "description": "Creates or updates an Azure SQL Server auditing policy.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServerAuditingPolicyCreateOrUpdateParameters"
            },
            "description": "The required parameters for createing or updating a Azure SQL Server auditing policy."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ServerAuditingPolicy"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ServerAuditingPolicy"
            }
          }
        }
      },
      "get": {
        "tags": [
          "AuditingPolicy"
        ],
        "operationId": "AuditingPolicy_GetServerPolicy",
        "description": "Returns an Azure SQL Server auditing policy.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ServerAuditingPolicy"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/dataMaskingPolicies/Default": {
      "put": {
        "tags": [
          "DataMasking"
        ],
        "operationId": "DataMasking_CreateOrUpdatePolicy",
        "description": "Creates or updates an Azure SQL Database data masking policy",
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database for which the data masking rule applies."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataMaskingPolicyCreateOrUpdateParameters"
            },
            "description": "The required parameters for createing or updating a firewall rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DataMaskingPolicy"
            }
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DataMaskingPolicy"
            }
          }
        }
      },
      "get": {
        "tags": [
          "DataMasking"
        ],
        "operationId": "DataMasking_GetPolicy",
        "description": "Returns an Azure SQL Database data masking policy.",
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database for which the data masking policy applies."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DataMaskingPolicy"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/dataMaskingPolicies/Default/rules/{dataMaskingRule}": {
      "put": {
        "tags": [
          "DataMasking"
        ],
        "operationId": "DataMasking_CreateOrUpdateRule",
        "description": "Creates or updates an Azure SQL Server Firewall rule.",
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database for which the data masking rule applies."
          },
          {
            "name": "dataMaskingRule",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database data masking rule."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataMaskingRuleCreateOrUpdateParameters"
            },
            "description": "The required parameters for createing or updating a data masking rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DataMaskingRule"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DataMaskingRule"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DataMasking"
        ],
        "operationId": "DataMasking_Delete",
        "description": "Deletes an Azure SQL Server data masking rule.",
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database for which the data masking rule applies."
          },
          {
            "name": "dataMaskingRule",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database  data masking rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "200": {
            "description": ""
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/dataMaskingPolicies/Default/Rules": {
      "get": {
        "tags": [
          "DataMasking"
        ],
        "operationId": "DataMasking_List",
        "description": "Returns a list of Azure SQL Database data masking rules.",
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database for which the data masking rules applies."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DataMaskingRuleListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/pause": {
      "post": {
        "tags": [
          "DatabaseActivation"
        ],
        "operationId": "DatabaseActivation_Pause",
        "description": "Start an Azure SQL Data Warehouse database pause operation.To determine the status of the operation call GetDatabaseActivationOperationStatus.",
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Data Warehouse database to pause."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "202": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/resume": {
      "post": {
        "tags": [
          "DatabaseActivation"
        ],
        "operationId": "DatabaseActivation_Resume",
        "description": "Start an Azure SQL Data Warehouse database resume operation. To determine the status of the operation call GetDatabaseActivationOperationStatus.",
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Data Warehouse database to resume."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "200": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/restorePoints": {
      "get": {
        "tags": [
          "DatabaseBackup"
        ],
        "operationId": "DatabaseBackup_ListRestorePoints",
        "description": "Returns a list of Azure SQL Database restore points.",
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database from which to retrieve available restore points."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestorePointListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}": {
      "put": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_CreateOrUpdate",
        "description": "Begins creating a new Azure SQL Database or updating an existing Azure SQL Database. To determine the status of the operation call GetDatabaseOperationStatus.",
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database to be operated on (Updated or created)."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatabaseCreateOrUpdateParameters"
            },
            "description": "The required parameters for creating or updating a database."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_Delete",
        "description": "Deletes the Azure SQL Database with the given name.",
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database to be deleted."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_Get",
        "description": "Returns information about an Azure SQL Database.",
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database to be retrieved."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases": {
      "get": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_GetById",
        "description": "Returns information about an Azure SQL Database.",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DatabaseListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-odata": "#/definitions/Database"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/usages": {
      "get": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_ListUsages",
        "description": "Returns information about Azure SQL Database usages.",
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DatabaseMetricListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}": {
      "put": {
        "tags": [
          "ElasticPools"
        ],
        "operationId": "ElasticPools_CreateOrUpdate",
        "description": "Begins creating a new Azure SQL Elastic Pool or updating an existing Azure SQL Elastic Pool. To determine the status of the operation call GetElasticPoolOperationStatus.",
        "parameters": [
          {
            "name": "elasticPoolName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Elastic Pool to be operated on (Updated or created)."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ElasticPoolCreateOrUpdateParameters"
            },
            "description": "The required parameters for createing or updating an Elastic Pool."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ElasticPool"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ElasticPool"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "ElasticPools"
        ],
        "operationId": "ElasticPools_Delete",
        "description": "Deletes the Azure SQL Elastic Pool with the given name.",
        "parameters": [
          {
            "name": "elasticPoolName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Elastic Pool to be deleted."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "ElasticPools"
        ],
        "operationId": "ElasticPools_Get",
        "description": "Returns information about an Azure SQL Elastic Pool.",
        "parameters": [
          {
            "name": "elasticPoolName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Elastic Pool to be retrieved."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ElasticPool"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/databases/{databaseName}": {
      "get": {
        "tags": [
          "ElasticPools"
        ],
        "operationId": "ElasticPools_GetDatabases",
        "description": "Returns information about an Azure SQL Database inside of an Azure SQL Elastic Pool.",
        "parameters": [
          {
            "name": "elasticPoolName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Elastic Pool to be retrieved."
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database to be retrieved."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools": {
      "get": {
        "tags": [
          "ElasticPools"
        ],
        "operationId": "ElasticPools_List",
        "description": "Returns information about Azure SQL Elastic Pools.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ElasticPoolListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/elasticPoolActivity": {
      "get": {
        "tags": [
          "ElasticPools"
        ],
        "operationId": "ElasticPools_ListActivity",
        "description": "Returns information about Azure SQL Elastic Pool Activity.",
        "parameters": [
          {
            "name": "elasticPoolName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Elastic Pool for which to get the current activity."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ElasticPoolActivityListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/elasticPoolDatabaseActivity": {
      "get": {
        "tags": [
          "ElasticPools"
        ],
        "operationId": "ElasticPools_ListDatabaseActivity",
        "description": "Returns information about activity on Azure SQL Databases inside of an Azure SQL Elastic Pool.",
        "parameters": [
          {
            "name": "elasticPoolName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Elastic Pool."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ElasticPoolDatabaseActivityListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/databases": {
      "get": {
        "tags": [
          "ElasticPools"
        ],
        "operationId": "ElasticPools_ListDatabases",
        "description": "Returns information about an Azure SQL Database inside of an Azure SQL Elastic Pool.",
        "parameters": [
          {
            "name": "elasticPoolName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Elastic Pool to be retrieved."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DatabaseListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/firewallRules/{firewallRule}": {
      "put": {
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_CreateOrUpdate",
        "description": "Creates or updates an Azure SQL Server Firewall rule.",
        "parameters": [
          {
            "name": "firewallRule",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Server Firewall Rule."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FirewallRuleCreateOrUpdateParameters"
            },
            "description": "The required parameters for createing or updating a firewall rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_Delete",
        "description": "Deletes an Azure SQL Server Firewall rule.",
        "parameters": [
          {
            "name": "firewallRule",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Server Firewall Rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_Get",
        "description": "Returns an Azure SQL Server Firewall rule.",
        "parameters": [
          {
            "name": "firewallRule",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Server Firewall Rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/firewallRules": {
      "get": {
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_List",
        "description": "Returns a list of Azure SQL Server Firewall rules.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FirewallRuleListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/capabilities": {
      "get": {
        "tags": [
          "Capabilities"
        ],
        "operationId": "Capabilities_Get",
        "description": "Returns information about the Azure SQL capabilities available for the specified region.",
        "parameters": [
          {
            "name": "locationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the region for which the Azure SQL capabilities are retrieved."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/LocationCapability"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/recommendedElasticPools/{recommendedElasticPoolName}": {
      "get": {
        "tags": [
          "RecommendedElasticPools"
        ],
        "operationId": "RecommendedElasticPools_Get",
        "description": "Returns information about an Azure SQL Recommended Elastic Pool.",
        "parameters": [
          {
            "name": "recommendedElasticPoolName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Recommended Elastic Pool to be retrieved."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RecommendedElasticPool"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/recommendedElasticPools/{recommendedElasticPoolName}/databases/{databaseName}": {
      "get": {
        "tags": [
          "RecommendedElasticPools"
        ],
        "operationId": "RecommendedElasticPools_GetDatabases",
        "description": "Returns information about an Azure SQL Database inside of an Azure Sql Recommended Elastic Pool.",
        "parameters": [
          {
            "name": "recommendedElasticPoolName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Elastic Pool to be retrieved."
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database to be retrieved."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/recommendedElasticPools": {
      "get": {
        "tags": [
          "RecommendedElasticPools"
        ],
        "operationId": "RecommendedElasticPools_List",
        "description": "Returns information about Azure SQL Recommended Elastic Pools.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RecommendedElasticPoolListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/recommendedElasticPools/{recommendedElasticPoolName}/databases": {
      "get": {
        "tags": [
          "RecommendedElasticPools"
        ],
        "operationId": "RecommendedElasticPools_ListDatabases",
        "description": "Returns information about an Azure SQL Database inside of an Azure Sql Recommended Elastic Pool.",
        "parameters": [
          {
            "name": "recommendedElasticPoolName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Recommended Elastic Pool to be retrieved."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DatabaseListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/recommendedElasticPools/{recommendedElasticPoolName}/metrics": {
      "get": {
        "tags": [
          "RecommendedElasticPools"
        ],
        "operationId": "RecommendedElasticPools_ListMetrics",
        "description": "Returns information about an recommended elastic pool metrics.",
        "parameters": [
          {
            "name": "recommendedElasticPoolName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Recommended Elastic Pool to be retrieved."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RecommendedElasticPoolListMetricsResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/recommendedIndexes/{indexName}": {
      "get": {
        "tags": [
          "RecommendedIndexes"
        ],
        "operationId": "RecommendedIndexes_Get",
        "description": "Returns details on recommended index.",
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL database."
          },
          {
            "name": "schemaName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL database schema."
          },
          {
            "name": "tableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL database table."
          },
          {
            "name": "indexName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL database recommended index."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RecommendedIndex"
            }
          }
        }
      },
      "put": {
        "tags": [
          "RecommendedIndexes"
        ],
        "operationId": "RecommendedIndexes_Update",
        "description": "We execute or cancel index operations by updating index state. Allowed state transitions are :Active          -> Pending          - Start index creation processPending         -> Active           - Cancel index creationActive/Pending  -> Ignored          - Ignore index recommendation so it will no longer show in active recommendationsIgnored         -> Active           - Restore index recommendationSuccess         -> Pending Revert   - Revert index that has been createdPending Revert  -> Revert Canceled  - Cancel index revert operation",
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database."
          },
          {
            "name": "schemaName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database schema."
          },
          {
            "name": "tableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database table."
          },
          {
            "name": "indexName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database recommended index."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecommendedIndexUpdateParameters"
            },
            "description": "The required parameters for updating index state."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RecommendedIndex"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/replicationLinks/{linkId}": {
      "delete": {
        "tags": [
          "DatabaseReplicationLinks"
        ],
        "operationId": "DatabaseReplicationLinks_Delete",
        "description": "Deletes the Azure SQL Database Replication Link with the given id.",
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database that has the replication link to be dropped."
          },
          {
            "name": "linkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The id of the replication link to be deleted."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "DatabaseReplicationLinks"
        ],
        "operationId": "DatabaseReplicationLinks_Get",
        "description": "Returns information about an Azure SQL Database Replication Link.",
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database to get the link for."
          },
          {
            "name": "linkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The replication link id to be retrieved."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReplicationLink"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/replicationLinks/{linkId}/failover": {
      "post": {
        "tags": [
          "DatabaseReplicationLinks"
        ],
        "operationId": "DatabaseReplicationLinks_Failover",
        "description": "Begins failover of the Azure SQL Database Replication Link with the given id.",
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database that has the replication link to be failed over."
          },
          {
            "name": "linkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The id of the replication link to be failed over."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "202": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/replicationLinks/{linkId}/forceFailoverAllowDataLoss": {
      "post": {
        "tags": [
          "DatabaseReplicationLinks"
        ],
        "operationId": "DatabaseReplicationLinks_FailoverAllowDataLoss",
        "description": "Begins a forced failover of the Azure SQL Database Replication Link with the given id which may result in data loss.",
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database that has the replication link to be failed over."
          },
          {
            "name": "linkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The id of the replication link to be failed over."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "202": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/replicationLinks": {
      "get": {
        "tags": [
          "DatabaseReplicationLinks"
        ],
        "operationId": "DatabaseReplicationLinks_List",
        "description": "Returns information about Azure SQL Database Replication Links.",
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database to retrieve links for."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReplicationLinkListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/connectionPolicies/Default": {
      "put": {
        "tags": [
          "SecureConnection"
        ],
        "operationId": "SecureConnection_CreateOrUpdateDatabasePolicy",
        "description": "Creates or updates an Azure SQL Server Firewall rule.",
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database for which the policy applies."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatabaseSecureConnectionPolicyCreateOrUpdateParameters"
            },
            "description": "The required parameters for createing or updating a secure connection policy."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DatabaseSecureConnectionPolicy"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DatabaseSecureConnectionPolicy"
            }
          }
        }
      },
      "get": {
        "tags": [
          "SecureConnection"
        ],
        "operationId": "SecureConnection_GetDatabasePolicy",
        "description": "Returns an Azure SQL Database secure connection policy.",
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database for which the secure connection policy applies."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DatabaseSecureConnectionPolicy"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/administrators/{administratorName}": {
      "put": {
        "tags": [
          "ServerAdministrators"
        ],
        "operationId": "ServerAdministrators_CreateOrUpdate",
        "description": "Begins creating a new Azure SQL Server Active Directory Administrator or updating an existing Azure SQL Server Active Directory Administrator. To determine the status of the operation call GetServerAdministratorOperationStatus.",
        "parameters": [
          {
            "name": "administratorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Server Active Directory Administrator."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServerAdministratorCreateOrUpdateParameters"
            },
            "description": "The required parameters for createing or updating an Active Directory Administrator."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ServerAdministrator"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ServerAdministrator"
            }
          },
          "202": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "ServerAdministrators"
        ],
        "operationId": "ServerAdministrators_Delete",
        "description": "Begins deleting an existing Azure SQL Server Active Directory Administrator.To determine the status of the operation call GetServerAdministratorDeleteOperationStatus.",
        "parameters": [
          {
            "name": "administratorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Server Active Directory Administrator."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "204": {
            "description": ""
          },
          "200": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "ServerAdministrators"
        ],
        "operationId": "ServerAdministrators_Get",
        "description": "Returns an Azure SQL Server Administrator.",
        "parameters": [
          {
            "name": "administratorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Server Active Directory Administrator."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ServerAdministrator"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/administrators": {
      "get": {
        "tags": [
          "ServerAdministrators"
        ],
        "operationId": "ServerAdministrators_List",
        "description": "Returns a list of Azure SQL Server Administrators.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ServerAdministratorListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}": {
      "put": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_CreateOrUpdate",
        "description": "Creates a new Azure SQL Server.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServerCreateOrUpdateParameters"
            },
            "description": "The required parameters for createing or updating a server."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Delete",
        "description": "Returns information about an Azure SQL Server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Get",
        "description": "Returns information about an Azure SQL Server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers": {
      "get": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_List",
        "description": "Returns information about an Azure SQL Server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ServerListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/usages": {
      "get": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_ListUsages",
        "description": "Returns information about Azure SQL Server usage.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ServerMetricListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/operationResults/versionUpgrade": {
      "delete": {
        "tags": [
          "ServerUpgrades"
        ],
        "operationId": "ServerUpgrades_Cancel",
        "description": "Cancel a pending upgrade for the Azure SQL Server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "ServerUpgrades"
        ],
        "operationId": "ServerUpgrades_Get",
        "description": "Returns information about Upgrade status of an Azure SQL Server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ServerUpgradeGetResult"
            }
          },
          "202": {
            "description": ""
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/upgrade": {
      "post": {
        "tags": [
          "ServerUpgrades"
        ],
        "operationId": "ServerUpgrades_Start",
        "description": "Start an Azure SQL Server Upgrade.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServerUpgradeStartParameters"
            },
            "description": "The required parameters for the Azure SQL Server Upgrade."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/serviceTierAdvisors/{serviceTierAdvisorName}": {
      "get": {
        "tags": [
          "ServiceTierAdvisors"
        ],
        "operationId": "ServiceTierAdvisors_Get",
        "description": "Returns information about a service tier advisor.",
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of database."
          },
          {
            "name": "serviceTierAdvisorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of service tier advisor."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ServiceTierAdvisor"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/serviceTierAdvisors": {
      "get": {
        "tags": [
          "ServiceTierAdvisors"
        ],
        "operationId": "ServiceTierAdvisors_List",
        "description": "Returns information about service tier advisors for specified database.",
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of database."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ServiceTierAdvisorListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/serviceObjectives/{serviceObjectiveName}": {
      "get": {
        "tags": [
          "ServiceObjectives"
        ],
        "operationId": "ServiceObjectives_Get",
        "description": "Returns information about an Azure SQL Database Service Objective.",
        "parameters": [
          {
            "name": "serviceObjectiveName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the service objective to retrieve."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ServiceObjective"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/serviceObjectives": {
      "get": {
        "tags": [
          "ServiceObjectives"
        ],
        "operationId": "ServiceObjectives_List",
        "description": "Returns information about Azure SQL Database Service Objectives.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameterGeneric"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ServiceObjectiveListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/transparentDataEncryption/current": {
      "put": {
        "tags": [
          "TransparentDataEncryption"
        ],
        "operationId": "TransparentDataEncryption_CreateOrUpdate",
        "description": "Creates or updates an Azure SQL Database Transparent Data Encryption Operation.",
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database for which setting the Transparent Data Encryption applies."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransparentDataEncryptionCreateOrUpdateParameters"
            },
            "description": "The required parameters for creating or updating transparent data encryption."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TransparentDataEncryption"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TransparentDataEncryption"
            }
          }
        }
      },
      "get": {
        "tags": [
          "TransparentDataEncryption"
        ],
        "operationId": "TransparentDataEncryption_Get",
        "description": "Returns an Azure SQL Database Transparent Data Encryption Response.",
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database for which the Transparent Data Encryption applies."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TransparentDataEncryption"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/transparentDataEncryption/current/operationResults": {
      "get": {
        "tags": [
          "TransparentDataEncryption"
        ],
        "operationId": "TransparentDataEncryption_ListActivity",
        "description": "Returns an Azure SQL Database Transparent Data Encryption Activity Response.",
        "parameters": [
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure SQL Database for which the Transparent Data Encryption applies."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TransparentDataEncryptionActivityListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    }
  },
  "definitions": {
    "ImportExtensionRequestParameters": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets the name of the extenstion."
        },
        "type": {
          "type": "string",
          "description": "Gets the type of the extenstion."
        },
        "properties": {
          "$ref": "#/definitions/ImportExtensionRequestProperties",
          "description": "Represents the properties of the resource."
        }
      },
      "description": "Import Azure SQL Database parameters."
    },
    "ImportExportOperationStatusResponse": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/ImportExportOperationStatusResponseProperties",
          "description": "Gets or sets the properties of the response."
        },
        "id": {
          "type": "string",
          "description": "Gets or sets the id returned from the server."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets the name returned from the server."
        },
        "type": {
          "type": "string",
          "description": "Gets or sets the type returned from the server."
        }
      },
      "description": "Response for Azure Sql Import/Export Status operation."
    },
    "ImportExportOperationStatusResponseProperties": {
      "properties": {
        "requestType": {
          "type": "string",
          "description": "Gets or sets the request type of the operation."
        },
        "serverName": {
          "type": "string",
          "description": "Gets or sets the name of the Azure SQL Server."
        },
        "databaseName": {
          "type": "string",
          "description": "Gets or sets the name of the Azure SQL Database."
        },
        "status": {
          "type": "string",
          "description": "Gets or sets the status message returned from the server."
        },
        "lastModifiedTime": {
          "type": "string",
          "description": "Gets or sets the operation status last modified time."
        },
        "queuedTime": {
          "type": "string",
          "description": "Gets or sets the operation queued time."
        },
        "blobUri": {
          "type": "string",
          "description": "Gets or sets the blob uri."
        },
        "errorMessage": {
          "type": "string",
          "description": "Gets or sets the error message returned from the server."
        }
      },
      "description": "Response for Azure Sql Import/Export Status operation."
    },
    "ImportRequestParameters": {
      "properties": {
        "databaseName": {
          "type": "string",
          "description": "Gets or sets the name of the Azure SQL database to import."
        },
        "edition": {
          "type": "string",
          "description": "Gets or sets the edition for the Azure Sql Database being created."
        },
        "serviceObjectiveName": {
          "type": "string",
          "description": "Gets or sets the name of the service objective to assign to the Azure SQL Database."
        },
        "maxSizeBytes": {
          "type": "string",
          "description": "Gets or sets the maximum size for the newly imported database."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ExportRequestParameters"
        }
      ],
      "description": "Import Azure SQL Database parameters."
    },
    "ExportRequestParameters": {
      "properties": {
        "storageKeyType": {
          "type": "string",
          "description": "Gets or sets the type of the storage key to use. Valid values are StorageAccessKey and SharedAccessKey."
        },
        "storageKey": {
          "type": "string",
          "description": "Gets or sets the storage key to use."
        },
        "storageUri": {
          "type": "string",
          "description": "Gets or sets the storage uri to use."
        },
        "administratorLogin": {
          "type": "string",
          "description": "Gets or sets the name of the SQL administrator."
        },
        "administratorLoginPassword": {
          "type": "string",
          "description": "Gets or sets the password of the SQL administrator."
        },
        "authenticationType": {
          "type": "string",
          "description": "Gets or sets the authentication type."
        }
      },
      "description": "Export Azure SQL Database parameters."
    },
    "DatabaseAuditingPolicyProperties": {
      "properties": {
        "useServerDefault": {
          "readOnly": true,
          "type": "string",
          "description": "Indicates whether the default server auditing policy is used for that Azure SQL Database."
        },
        "auditingState": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the auditing state of the Azure SQL Server auditing policy."
        },
        "eventTypesToAudit": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the events types of the Azure SQL Server auditing policy."
        },
        "storageAccountName": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the storage account name of the Azure SQL Server auditing policy."
        },
        "storageAccountKey": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the primary storage account key of the Azure SQL Server auditing policy."
        },
        "storageAccountSecondaryKey": {
          "readOnly": true,
          "type": "string",
          "description": "Gets secondary key of the storage account of the Azure SQL Server auditing policy."
        },
        "storageTableEndpoint": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the storage table endpoint of the Azure SQL Server auditing policy."
        },
        "storageAccountResourceGroupName": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the resource group of the storage account of the Azure SQL Server auditing policy."
        },
        "storageAccountSubscriptionId": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the subscription Id of the storage account of the Azure SQL Server auditing policy."
        },
        "retentionDays": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the retention in days of the Azure SQL Database auditing policy."
        },
        "auditLogsTableName": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the name of the table audit logs are written to in the Azure SQL Database auditing policy."
        },
        "fullAuditLogsTableName": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the full name of the table audit logs are written to in the Azure SQL Database auditing policy."
        }
      },
      "description": "Represents the properties of an Azure SQL auditing policy."
    },
    "DatabaseAuditingPolicyCreateOrUpdateParameters": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/DatabaseAuditingPolicyProperties",
          "description": "Gets or sets the properties of the request."
        }
      },
      "required": [
        "properties"
      ],
      "description": "Create or update database audting policy parameters."
    },
    "DatabaseAuditingPolicy": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/DatabaseAuditingPolicyProperties",
          "description": "Represents the properties of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Represents an Azure SQL Database auditing policy."
    },
    "ServerAuditingPolicyProperties": {
      "properties": {
        "auditingState": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the auditing state of the Azure SQL Server auditing policy."
        },
        "eventTypesToAudit": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the events types of the Azure SQL Server auditing policy."
        },
        "storageAccountName": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the storage account name of the Azure SQL Server auditing policy."
        },
        "storageAccountKey": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the primary storage account key of the Azure SQL Server auditing policy."
        },
        "storageAccountSecondaryKey": {
          "readOnly": true,
          "type": "string",
          "description": "Gets secondary key of the storage account of the Azure SQL Server auditing policy."
        },
        "storageTableEndpoint": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the storage table endpoint of the Azure SQL Server auditing policy."
        },
        "storageAccountResourceGroupName": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the resource group of the storage account of the Azure SQL Server auditing policy."
        },
        "storageAccountSubscriptionId": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the subscription Id of the storage account of the Azure SQL Server auditing policy."
        },
        "retentionDays": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the retention in days of the Azure SQL Database auditing policy."
        },
        "auditLogsTableName": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the name of the table audit logs are written to in the Azure SQL Database auditing policy."
        },
        "fullAuditLogsTableName": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the full name of the table audit logs are written to in the Azure SQL Database auditing policy."
        }
      },
      "description": "Represents the properties of an Azure SQL auditing policy."
    },
    "ServerAuditingPolicyCreateOrUpdateParameters": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServerAuditingPolicyProperties",
          "description": "Gets or sets the properties of the request."
        }
      },
      "required": [
        "properties"
      ],
      "description": "Create or update Azure SQL Server audting policy parameters."
    },
    "ServerAuditingPolicy": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServerAuditingPolicyProperties",
          "description": "Represents the properties of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Represents an Azure SQL Server auditing policy."
    },
    "DataMaskingPolicyProperties": {
      "properties": {
        "dataMaskingState": {
          "type": "string",
          "description": "Gets or sets the state of the data masking policy."
        },
        "exemptPrincipals": {
          "type": "string",
          "description": "Gets or sets the list of the exempt principals"
        }
      },
      "required": [
        "dataMaskingState",
        "exemptPrincipals"
      ],
      "description": "Represents the properties of an Azure SQL Database data masking policy."
    },
    "DataMaskingPolicyCreateOrUpdateParameters": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/DataMaskingPolicyProperties",
          "description": "Gets or sets the properties of the request."
        }
      },
      "required": [
        "properties"
      ],
      "description": "Create or update data masking Rule parameters."
    },
    "DataMaskingPolicy": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/DataMaskingPolicyProperties",
          "description": "Represents the properties of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Represents an Azure SQL Database data masking policy."
    },
    "DataMaskingRuleProperties": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets or sets the rule Id."
        },
        "ruleState": {
          "type": "string",
          "description": "Gets or sets the rule state."
        },
        "schemaName": {
          "type": "string",
          "description": "Gets or sets the schema name on which the data masking rule is applied."
        },
        "tableName": {
          "type": "string",
          "description": "Gets or sets the table name on which the data masking rule is applied."
        },
        "columnName": {
          "type": "string",
          "description": "Gets or sets the column name on which the data masking rule is applied."
        },
        "maskingFunction": {
          "type": "string",
          "description": "Gets or sets the masking function that is used for the data masking rule."
        },
        "numberFrom": {
          "type": "string",
          "description": "Gets or sets the numberFrom property of the masking rule."
        },
        "numberTo": {
          "type": "string",
          "description": "Gets or sets the numberTo property of the data masking rule."
        },
        "prefixSize": {
          "type": "string",
          "description": "Gets or sets the prefixSize property that is used for the data masking rule."
        },
        "suffixSize": {
          "type": "string",
          "description": "Gets or sets the suffixSize property that is used for the data masking rule."
        },
        "replacementString": {
          "type": "string",
          "description": "Gets or sets the replacementString property that is used for the data masking rule."
        }
      },
      "required": [
        "id",
        "ruleState",
        "maskingFunction"
      ],
      "description": "Represents the properties of an Azure SQL Database data masking rule."
    },
    "DataMaskingRuleCreateOrUpdateParameters": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/DataMaskingRuleProperties",
          "description": "Gets or sets the properties of the request."
        }
      },
      "required": [
        "properties"
      ],
      "description": "Create or update data masking rule parameters."
    },
    "DataMaskingRule": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/DataMaskingRuleProperties",
          "description": "Represents the properties of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Represents an Azure SQL Database data masking rule."
    },
    "DataMaskingRuleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataMaskingRule"
          },
          "description": "Gets or sets the list of Azure Sql Database data masking rules"
        }
      },
      "description": "Represents the response to a List data masking rules request."
    },
    "ErrorResult": {
      "description": "Error information",
      "properties": {
        "code": {
          "type": "string",
          "description": "Gets or sets the error code returned from the server."
        },
        "message": {
          "type": "string",
          "description": "Gets or sets the error message returned from the server."
        },
        "target": {
          "type": "string",
          "description": "Gets or sets the target of the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "RestorePointProperties": {
      "properties": {
        "restorePointType": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the restore point type of the Azure SQL Database restore point.",
          "enum": [
            "DISCRETE",
            "CONTINUOUS"
          ],
          "x-ms-enum": {
            "name": "RestorePointTypes",
            "modelAsString": true
          }
        },
        "restorePointCreationDate": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Restore point creation time. Populated when restorePointType = CONTINUOUS. Null otherwise."
        },
        "earliestRestoreDate": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Earliest restore time. Populated when restorePointType = DISCRETE. Null otherwise."
        }
      },
      "description": "Represents the properties of an Azure SQL Database restore point."
    },
    "RestorePoint": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/RestorePointProperties",
          "description": "Gets or sets the properties representing the restore point."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Represents an Azure SQL Database restore point."
    },
    "RestorePointListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RestorePoint"
          },
          "description": "Gets or sets the list of a given Azure Sql Database restore points."
        }
      },
      "description": "Represents the response to a List Azure Sql Database restore points request."
    },
    "DatabaseCreateOrUpdateProperties": {
      "properties": {
        "edition": {
          "type": "string",
          "description": "Gets or sets the edition for the Azure Sql Database being updated or created."
        },
        "collation": {
          "type": "string",
          "description": "Gets or sets the collation of the Azure Sql Database being created.  You cannot change change the collation of an existing Azure Sql Database."
        },
        "maxSizeBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the maximum size of the Azure Sql Database being created or updated in bytes."
        },
        "requestedServiceObjectiveId": {
          "type": "string",
          "description": "Gets or sets the service objective to be applied to the Azure Sql Database being created or updated."
        },
        "requestedServiceObjectiveName": {
          "type": "string",
          "description": "Gets or sets the service objective to be applied to the Azure Sql Database being created or updated."
        },
        "elasticPoolName": {
          "type": "string",
          "description": "Gets or sets the name of the Elastic Pool to put the Azure Sql Database in."
        },
        "sourceDatabaseId": {
          "type": "string",
          "description": "Gets or sets the resource id of the database to use as the source for the copy being created."
        },
        "createMode": {
          "type": "string",
          "description": "Gets or sets the create Mode for the Azure Sql Database database being created.",
          "enum": [
            "Default",
            "Copy",
            "Secondary",
            "NonReadableSecondary"
          ],
          "x-ms-enum": {
            "name": "DatabaseCreateMode",
            "modelAsString": true
          }
        }
      },
      "description": "Create or update Azure Sql Database parameters properties."
    },
    "DatabaseCreateOrUpdateParameters": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/DatabaseCreateOrUpdateProperties",
          "description": "Gets or sets the properties of the request."
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Create or update Sql Azure Database parameters."
    },
    "SloUsageMetric": {
      "properties": {
        "serviceLevelObjective": {
          "type": "string",
          "description": "Gets or sets serviceLevelObjective for SLO usage metric."
        },
        "serviceLevelObjectiveId": {
          "type": "string",
          "description": "Gets or sets serviceLevelObjectiveId for SLO usage metric."
        },
        "inRangeTimeRatio": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets inRangeTimeRatio for SLO usage metric."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Represents a Slo Usage Metric."
    },
    "ServiceTierAdvisorProperties": {
      "properties": {
        "observationPeriodStart": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Gets the observation period start."
        },
        "observationPeriodEnd": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Gets the observation period start."
        },
        "activeTimeRatio": {
          "type": "number",
          "format": "double",
          "description": "Gets the activeTimeRatio for service tier advisor."
        },
        "minDtu": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets minDtu for service tier advisor."
        },
        "avgDtu": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets avgDtu for service tier advisor."
        },
        "maxDtu": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets maxDtu for service tier advisor."
        },
        "maxSizeInGB": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets maxSizeInGB for service tier advisor."
        },
        "serviceLevelObjectiveUsageMetrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SloUsageMetric"
          },
          "description": "Gets or sets serviceLevelObjectiveUsageMetrics for the service tier advisor."
        },
        "currentServiceLevelObjective": {
          "type": "string",
          "description": "Gets or sets currentServiceLevelObjective for service tier advisor."
        },
        "currentServiceLevelObjectiveId": {
          "type": "string",
          "description": "Gets or sets currentServiceLevelObjectiveId for service tier advisor."
        },
        "usageBasedRecommendationServiceLevelObjective": {
          "type": "string",
          "description": "Gets or sets usageBasedRecommendationServiceLevelObjective for service tier advisor."
        },
        "usageBasedRecommendationServiceLevelObjectiveId": {
          "type": "string",
          "description": "Gets or sets usageBasedRecommendationServiceLevelObjectiveId for service tier advisor."
        },
        "databaseSizeBasedRecommendationServiceLevelObjective": {
          "type": "string",
          "description": "Gets or sets databaseSizeBasedRecommendationServiceLevelObjective for service tier advisor."
        },
        "databaseSizeBasedRecommendationServiceLevelObjectiveId": {
          "type": "string",
          "description": "Gets or sets databaseSizeBasedRecommendationServiceLevelObjectiveId for service tier advisor."
        },
        "disasterPlanBasedRecommendationServiceLevelObjective": {
          "type": "string",
          "description": "Gets or sets disasterPlanBasedRecommendationServiceLevelObjective for service tier advisor."
        },
        "disasterPlanBasedRecommendationServiceLevelObjectiveId": {
          "type": "string",
          "description": "Gets or sets disasterPlanBasedRecommendationServiceLevelObjectiveId for service tier advisor."
        },
        "overallRecommendationServiceLevelObjective": {
          "type": "string",
          "description": "Gets or sets overallRecommendationServiceLevelObjective for service tier advisor."
        },
        "overallRecommendationServiceLevelObjectiveId": {
          "type": "string",
          "description": "Gets or sets overallRecommendationServiceLevelObjectiveId for service tier advisor."
        },
        "confidence": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets confidence for service tier advisor."
        }
      },
      "description": "Represents the properties of a Service Tier Advisor."
    },
    "ServiceTierAdvisor": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServiceTierAdvisorProperties",
          "description": "Gets or sets the properites representing the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Represents a Service Tier Advisor."
    },
    "UpgradeHint": {
      "properties": {
        "targetServiceLevelObjective": {
          "type": "string",
          "description": "Gets or sets targetServiceLevelObjective for upgrade hint."
        },
        "targetServiceLevelObjectiveId": {
          "type": "string",
          "description": "Gets or sets targetServiceLevelObjectiveId for upgrade hint."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Represents a Upgrade Hint."
    },
    "ColumnProperties": {
      "properties": {
        "columnType": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the type of Azure SQL Database table column."
        }
      },
      "description": "Represents the properties of an Azure SQL Database table column."
    },
    "Column": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/ColumnProperties",
          "description": "Gets or sets the properties representing the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Represents an Azure SQL Database table column."
    },
    "OperationImpact": {
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the name of the impact dimension."
        },
        "unit": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the unit in which estimated impact to dimension is measured."
        },
        "changeValueAbsolute": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "Gets the absolute impact to dimension."
        },
        "changeValueRelative": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "Gets the relative impact to dimension (null if not applicable)"
        }
      },
      "description": "Represents impact of an operation, both in absolute and relative terms."
    },
    "RecommendedIndexProperties": {
      "properties": {
        "action": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the proposed index action. We suggest user to create missing index, drop unused index or to rebuild already existing index to improve its performance. Possible values are 'Create', 'Drop', 'Rebuild'."
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the state recommendation is in. Current options are: 'Active', 'Pending', 'Executing', 'Verifying', 'Pending Revert', 'Reverting', 'Reverted', 'Ignored', 'Expired', 'Blocked', 'Success'."
        },
        "created": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Gets the UTC datetime showing when this resource was created."
        },
        "lastModified": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Gets the UTC datetime of when was this resource last changed."
        },
        "indexType": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the type of index (CLUSTERED, NONCLUSTERED, COLUMNSTORE, CLUSTERED COLUMNSTORE)"
        },
        "schema": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the schema where table to build index over resides"
        },
        "table": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the table on which to build index."
        },
        "columns": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Columns over which to build index"
        },
        "includedColumns": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets the list of column names to be included in the index"
        },
        "indexScript": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the full build index script"
        },
        "estimatedImpact": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationImpact"
          },
          "description": "Gets the estimated impact of doing recommended index action."
        },
        "reportedImpact": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationImpact"
          },
          "description": "Gets the values reported after index action is complete."
        }
      },
      "description": "Represents the properties of an Azure SQL Database recommended index."
    },
    "RecommendedIndex": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecommendedIndexProperties",
          "readOnly": true,
          "description": "Gets the properties representing the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Represents an Azure SQL Database recommended index."
    },
    "TableProperties": {
      "properties": {
        "tableType": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the type of Azure SQL Database table.",
          "enum": [
            "BaseTable",
            "View"
          ],
          "x-ms-enum": {
            "name": "TableType",
            "modelAsString": true
          }
        },
        "columns": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Column"
          },
          "description": "Gets the columns from this table."
        },
        "recommendedIndexes": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecommendedIndex"
          },
          "description": "Gets the recommended indices for this table."
        }
      },
      "description": "Represents the properties of an Azure SQL Database table."
    },
    "Table": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/TableProperties",
          "description": "Gets or sets the properties representing the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Represents an Azure SQL Database table."
    },
    "SchemaProperties": {
      "properties": {
        "tables": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Table"
          },
          "description": "Gets the tables from this database."
        }
      },
      "description": "Represents the properties of an Azure SQL Database schema."
    },
    "Schema": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/SchemaProperties",
          "description": "Gets or sets the properties representing the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Represents an Azure SQL Database schema."
    },
    "DatabaseProperties": {
      "properties": {
        "collation": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the collation of the Azure SQL Database."
        },
        "creationDate": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Gets the creation date of the Azure SQL Database."
        },
        "currentServiceObjectiveId": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the current Service Level Objective Id of the Azure SQL Database. This is the Id of the Service Level Objective that is currently active."
        },
        "databaseId": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the Id of the Azure SQL Database."
        },
        "earliestRestoreDate": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Gets the recovery period starte date of the Azure SQL Database. This records the start date and time when recovery is available for this Azure SQL Database."
        },
        "edition": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the edition of the Azure SQL Database.  The DatabaseEditions enumeration contains all the valid editions.",
          "enum": [
            "Web",
            "Business",
            "Basic",
            "Standard",
            "Premium",
            "Free",
            "Stretch",
            "DataWarehouse"
          ],
          "x-ms-enum": {
            "name": "DatabaseEditions",
            "modelAsString": true
          }
        },
        "maxSizeBytes": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "Gets the max size of the Azure SQL Database expressed in bytes."
        },
        "requestedServiceObjectiveId": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the configured Service Level Objective Id of the Azure SQL Database. This is the Service Level Objective that is being applied to the Azure SQL Database."
        },
        "requestedServiceObjectiveName": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the name of the configured Service Level Objective of the Azure SQL Database. This is the Service Level Objective that is being applied to the Azure SQL Database."
        },
        "serviceLevelObjective": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the Service Level Objective of the Azure SQL Database."
        },
        "status": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the status of the Azure SQL Database."
        },
        "elasticPoolName": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the name of the Azure SQL Elastic Pool the database is in."
        },
        "serviceTierAdvisors": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceTierAdvisor"
          },
          "description": "Gets the list of service tier advisors for this database. Expanded property"
        },
        "upgradeHint": {
          "$ref": "#/definitions/UpgradeHint",
          "readOnly": true,
          "description": "Gets the upgrade hint for this database."
        },
        "schemas": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Schema"
          },
          "description": "Gets the schemas from this database."
        },
        "defaultSecondaryLocation": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the default secondary region for this database."
        }
      },
      "description": "Represents the properties of an Azure SQL Database."
    },
    "Database": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/DatabaseProperties",
          "description": "Gets or sets the properties representing the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Represents an Azure SQL Database."
    },
    "ServerDisasterRecoveryConfigurationCreateOrUpdateParameters": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServerDisasterRecoveryConfigurationCreateOrUpdateProperties",
          "description": "Gets or sets the properties of the request."
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Create or update Azure SQL Server disaster recovery configuration parameters."
    },
    "ServerDisasterRecoveryConfigurationCreateOrUpdateProperties": {
      "properties": {
        "autoFailover": {
          "readOnly": true,
          "type": "string",
          "description": "Whether or not automatic failover is enabled."
        },
        "failoverPolicy": {
          "readOnly": true,
          "type": "string",
          "description": "The policy for automatically failing over."
        },
        "partnerLogicalServerName": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the name of the partner server."
        },
        "partnerServerId": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the id path the partner server."
        },
        "role": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the role of the server."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of server disaster recovery configuration."
        }
      },
      "description": "Represents the properties of an Azure SQL Server disaster recovery configuration."
    },
    "ServerDisasterRecoveryConfiguration": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServerDisasterRecoveryConfigurationProperties",
          "description": "Gets or sets the properties representing the Server Disaster Recovery Configuration."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Represents a server disaster recovery configuration."
    },
    "ServerDisasterRecoveryConfigurationList": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerDisasterRecoveryConfiguration"
          },
          "description": "Gets or sets the list of Azure Sql Server disaster recovery configurations."
        }
      },
      "description": "Represents the response to a List Azure Sql Server disaster recovery configuration request."
    },
    "ServerDisasterRecoveryConfigurationProperties": {
      "properties": {
        "autoFailover": {
          "readOnly": true,
          "type": "string",
          "description": "Whether or not automatic failover is enabled."
        },
        "failoverPolicy": {
          "readOnly": true,
          "type": "string",
          "description": "The policy for automatically failing over."
        },
        "partnerLogicalServerName": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the name of the partner server."
        },
        "partnerServerId": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the id path the partner server."
        },
        "role": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the role of the server."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of server disaster recovery configuration."
        }
      },
      "description": "Represents the properties of an Azure SQL Server disaster recovery configuration."
    },
    "GeoBackup": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/GeoBackupProperties",
          "description": "Gets or sets the properties representing the geo backup."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Represents an Azure SQL Database geo backup."
    },
    "GeoBackupProperties": {
      "properties": {
        "edition": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the edition of the Azure SQL Database."
        },
        "serviceLevelObjective": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the current service level objective name for the database."
        },
        "elasticPoolName": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the elastic pool name for the database."
        },
        "lastAvailableBackupDate": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Gets the last available backup date."
        }
      },
      "description": "Represents an Azure SQL Database geo backup."
    },
    "GeoBackupList": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeoBackup"
          },
          "description": "Gets or sets the list of a given Azure Sql Database geo backups."
        }
      },
      "description": "Represents the response to a List Azure Sql Database geo backups request."
    },
    "DeletedDatabaseBackup": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/DeletedDatabaseBackupProperties",
          "description": "Gets or sets the object representing a given Azure Sql Database deleted database backup."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Represents an Azure SQL Database restorable deleted database."
    },
    "DeletedDatabaseBackupProperties": {
      "properties": {
        "databaseName": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the Azure SQL Database name."
        },
        "creationDate": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Gets the creation date of the Azure SQL Database."
        },
        "deletionDate": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Gets the deletion date of the Azure SQL Database."
        },
        "earliestRestoreDate": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Gets the recovery period starte date of the Azure SQL Database. This records the start date and time when recovery is available for this Azure SQL Database."
        },
        "edition": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the edition of the Azure SQL Database."
        },
        "maxSizeBytes": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "Gets the max size of the Azure SQL Database expressed in bytes."
        },
        "serviceLevelObjective": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the Service Level Objective of the Azure SQL Database."
        },
        "elasticPoolName": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the name of the Azure SQL Elastic Pool the database is in."
        }
      },
      "description": "Represents the properties of an Azure SQL Database restorable deleted database."
    },
    "DeletedDatabaseBackupList": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeletedDatabaseBackup"
          },
          "description": "Gets or sets the list of a given Azure Sql Database deleted database backups."
        }
      },
      "description": "Represents the response to a List Azure Sql Database deleted database backups request."
    },
    "DatabaseListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Database"
          },
          "description": "Gets or sets the list of Azure Sql Databases housed in the server."
        }
      },
      "description": "Represents the response to a List Azure Sql Database request."
    },
    "DatabaseMetric": {
      "properties": {
        "resourceName": {
          "type": "string",
          "description": "Gets or sets the name of the resource."
        },
        "displayName": {
          "type": "string",
          "description": "Gets or sets the metric display name."
        },
        "currentValue": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets the current value of the metric."
        },
        "limit": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets the current limit of the metric."
        },
        "unit": {
          "type": "string",
          "description": "Gets or sets the units of the metric."
        },
        "nextResetTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the next reset time for the metric."
        }
      },
      "description": "Represents Azure SQL Database metrics."
    },
    "DatabaseMetricListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatabaseMetric"
          },
          "description": "Gets or sets the list of Azure Sql Database metrics for the database."
        }
      },
      "description": "Represents the response to a List Azure Sql Database metrics request."
    },
    "ElasticPoolCreateOrUpdateProperties": {
      "properties": {
        "edition": {
          "type": "string",
          "description": "Gets or sets the edition for the Azure SQL Elastic Pool being updated or created."
        },
        "dtu": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the total shared DTU for the Sql Azure Database Elastic Pool.This must agree with the StorageMB if both are specified."
        },
        "storageMB": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets storage limit for the Sql Azure Database Elastic Pool in MB.This must agree with the Dtu if both are specified."
        },
        "databaseDtuMin": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the minimum DTU all Sql Azure Databases are guaranteed."
        },
        "databaseDtuMax": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Gets the maximum DTU any one Sql Azure Database can consume."
        }
      },
      "description": "Create or update Azure SQL Elastic Pool parameters properties."
    },
    "ElasticPoolCreateOrUpdateParameters": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/ElasticPoolCreateOrUpdateProperties",
          "description": "Gets or sets the properties of the request."
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Create or update Sql Azure Database Elastic Pool parameters."
    },
    "ElasticPoolProperties": {
      "properties": {
        "creationDate": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Gets the creation date of the Azure SQL Elastic Pool."
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the state of the Azure SQL Elastic Pool."
        },
        "edition": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the edition of the Azure SQL Elastic Pool.",
          "enum": [
            "Basic",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "DatabaseEditions",
            "modelAsString": true
          }
        },
        "dtu": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Gets the total shared DTU for the Sql Azure Database Elastic Pool."
        },
        "databaseDtuMax": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Gets the maximum DTU any one Sql Azure Database can consume."
        },
        "databaseDtuMin": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Gets the minimum DTU all Sql Azure Databases are guaranteed."
        },
        "storageMB": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Gets storage limit for the Sql Azure Database Elastic Pool in MB."
        }
      },
      "description": "Represents the properties of an Azure SQL Elastic Pool."
    },
    "ElasticPool": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/ElasticPoolProperties",
          "description": "Gets or sets the properties representing the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Represents an Azure SQL Elastic Pool (Elastic Pool)."
    },
    "ElasticPoolListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ElasticPool"
          },
          "description": "Gets or sets the list of Azure Sql Elastic Pools hosted in the server."
        }
      },
      "description": "Represents the response to a List Azure Sql Elastic Pool request."
    },
    "ElasticPoolActivityProperties": {
      "properties": {
        "endTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Gets the time the operation finished."
        },
        "errorCode": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Gets the error code if available."
        },
        "errorMessage": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the error message if available."
        },
        "errorSeverity": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Gets the error severity if available."
        },
        "operation": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the operation name."
        },
        "operationId": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the unique operation ID."
        },
        "percentComplete": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Gets the percentage complete if available."
        },
        "requestedDatabaseDtuMax": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Gets the requested max DTU per database if available."
        },
        "requestedDatabaseDtuMin": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Gets the requested min DTU per database if available."
        },
        "requestedDtu": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Gets the requested DTU for the pool if available."
        },
        "requestedElasticPoolName": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the requested name for the Elastic Pool if available."
        },
        "requestedStorageLimitInGB": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "Gets the requested storage limit for the pool in GB if available."
        },
        "elasticPoolName": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the name of the Elastic Pool."
        },
        "serverName": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the name of the Azure SQL Server the Elastic Pool is in."
        },
        "startTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Gets the time the operation started."
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the current state of the operation."
        }
      },
      "description": "Represents the properties of an Azure SQL Elastic Pool."
    },
    "ElasticPoolActivity": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/ElasticPoolActivityProperties",
          "description": "Gets or sets the properties representing the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Represents the activity on an Azure SQL Elastic Pool."
    },
    "ElasticPoolActivityListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ElasticPoolActivity"
          },
          "description": "Gets or sets the list of Azure Sql Elastic Pool Activities."
        }
      },
      "description": "Represents the response to a List Azure Sql Elastic Pool Activity request."
    },
    "ElasticPoolDatabaseActivityProperties": {
      "properties": {
        "databaseName": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the database name."
        },
        "endTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Gets the time the operation finished."
        },
        "errorCode": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Gets the error code if available."
        },
        "errorMessage": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the error message if available."
        },
        "errorSeverity": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Gets the error severity if available."
        },
        "operation": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the operation name."
        },
        "operationId": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the unique operation ID."
        },
        "percentComplete": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Gets the percentage complete if available."
        },
        "requestedElasticPoolName": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the name for the Elastic Pool the database is moving into if available."
        },
        "currentElasticPoolName": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the name of the current Elastic Pool the database is in if available."
        },
        "currentServiceObjective": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the name of the current service objective if available."
        },
        "requestedServiceObjective": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the name of the requested service objective if available."
        },
        "serverName": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the name of the Azure SQL Server the Elastic Pool is in."
        },
        "startTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Gets the time the operation started."
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the current state of the operation."
        }
      },
      "description": "Represents the properties of an Azure SQL Elastic Pool Database Activity."
    },
    "ElasticPoolDatabaseActivity": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/ElasticPoolDatabaseActivityProperties",
          "description": "Gets or sets the properties representing the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Represents the activity on an Azure SQL Elastic Pool."
    },
    "ElasticPoolDatabaseActivityListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ElasticPoolDatabaseActivity"
          },
          "description": "Gets or sets the list of Azure Sql Elastic Pool Database Activities."
        }
      },
      "description": "Represents the response to a List Azure Sql Elastic Pool Database Activity request."
    },
    "FirewallRuleCreateOrUpdateProperties": {
      "properties": {
        "startIpAddress": {
          "type": "string",
          "description": "Gets or sets the start IP address for the firewall rule being updated or created."
        },
        "endIpAddress": {
          "type": "string",
          "description": "Gets or sets the end IP address of the firewall rule being created."
        }
      },
      "description": "Create or update Firewall Rule parameters properties."
    },
    "FirewallRuleCreateOrUpdateParameters": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/FirewallRuleCreateOrUpdateProperties",
          "description": "Gets or sets the properties of the request."
        }
      },
      "required": [
        "properties"
      ],
      "description": "Create or update Firewall Rule parameters."
    },
    "FirewallRuleProperties": {
      "properties": {
        "startIpAddress": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the start IP address of the Azure SQL Database Firewall Rule."
        },
        "endIpAddress": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the end IP address of the Azure SQL Database Firewall Rule."
        }
      },
      "description": "Represents the properties of an Azure SQL Server Firewall Rule."
    },
    "FirewallRule": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/FirewallRuleProperties",
          "description": "Gets or sets the properties representing the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Represents an Azure SQL Server Firewall Rule."
    },
    "FirewallRuleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallRule"
          },
          "description": "Gets or sets the list of Azure SQL Server firewall rules for the server."
        }
      },
      "description": "Represents the response to a List Firewall Rules request."
    },
    "MaxSizeCapability": {
      "properties": {
        "limit": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Gets the maximum size of the database (see 'unit' for the units)."
        },
        "unit": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the units that the limit is expressed in.",
          "enum": [
            "Megabytes",
            "Gigabytes",
            "Terabytes",
            "Petabytes"
          ],
          "x-ms-enum": {
            "name": "MaxSizeUnits",
            "modelAsString": true
          }
        },
        "status": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the status of the maximum size capability.",
          "enum": [
            "Visible",
            "Available",
            "Default"
          ],
          "x-ms-enum": {
            "name": "CapabilityStatus",
            "modelAsString": true
          }
        }
      },
      "description": "Represents the maximum size limits for an Azure SQL Database."
    },
    "ServiceObjectiveCapability": {
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the Service Objective name."
        },
        "status": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the status of the Service Objective.",
          "enum": [
            "Visible",
            "Available",
            "Default"
          ],
          "x-ms-enum": {
            "name": "CapabilityStatus",
            "modelAsString": true
          }
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the unique ID of the Service Objective."
        },
        "supportedMaxSizes": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MaxSizeCapability"
          },
          "description": "Gets the list of supported maximum Azure SQL Database sizes for this Service Objective."
        }
      },
      "description": "Represents the Service Objectives capabilities."
    },
    "EditionCapability": {
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the edition name."
        },
        "status": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the status of the Azure SQL Server edition.",
          "enum": [
            "Visible",
            "Available",
            "Default"
          ],
          "x-ms-enum": {
            "name": "CapabilityStatus",
            "modelAsString": true
          }
        },
        "supportedServiceLevelObjectives": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceObjectiveCapability"
          },
          "description": "Gets the list of supported Service Objectives for the edition."
        }
      },
      "description": "Represents the Azure SQL Server edition capabilities."
    },
    "ServerVersionCapability": {
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the server version name."
        },
        "status": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the status of the Azure SQL Server version.",
          "enum": [
            "Visible",
            "Available",
            "Default"
          ],
          "x-ms-enum": {
            "name": "CapabilityStatus",
            "modelAsString": true
          }
        },
        "supportedEditions": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EditionCapability"
          },
          "description": "Gets the list of supported Azure SQL Server editions."
        }
      },
      "description": "Represents the Azure SQL Server capabilities."
    },
    "LocationCapability": {
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the region name."
        },
        "status": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the status for the region with respect to Azure SQL.",
          "enum": [
            "Visible",
            "Available",
            "Default"
          ],
          "x-ms-enum": {
            "name": "CapabilityStatus",
            "modelAsString": true
          }
        },
        "supportedServerVersions": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerVersionCapability"
          },
          "description": "Gets the list of supported Azure SQL Server versions."
        }
      },
      "description": "Represents the Azure SQL capabilities for a region."
    },
    "RecommendedElasticPoolMetric": {
      "properties": {
        "dateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the time of metric."
        },
        "dtu": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets the DTU."
        },
        "sizeGB": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets size in gigabytes."
        }
      },
      "description": "Represents Azure SQL recommended elastic pool metric."
    },
    "RecommendedElasticPoolProperties": {
      "properties": {
        "databaseEdition": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the edition of the Azure SQL Recommended Elastic Pool. The DatabaseEditions enumeration contains all the valid editions.",
          "enum": [
            "Web",
            "Business",
            "Basic",
            "Standard",
            "Premium",
            "Free"
          ],
          "x-ms-enum": {
            "name": "DatabaseEditions",
            "modelAsString": true
          }
        },
        "dtu": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "Gets the DTU for the Sql Azure Recommended Elastic Pool."
        },
        "databaseDtuMin": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "Gets the minimum DTU for the database."
        },
        "databaseDtuMax": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "Gets the maximum DTU for the database."
        },
        "storageMB": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "Gets storage size in megabytes."
        },
        "observationPeriodStart": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Gets the observation period start."
        },
        "observationPeriodEnd": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Gets the observation period start."
        },
        "maxObservedDtu": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "Gets maximum observed DTU."
        },
        "maxObservedStorageMB": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "Gets maximum observed storage in megabytes."
        },
        "databases": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Database"
          },
          "description": "Gets the list of Azure Sql Databases in this pool. Expanded property"
        },
        "metrics": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecommendedElasticPoolMetric"
          },
          "description": "Gets the list of Azure Sql Databases housed in the server. Expanded property"
        }
      },
      "description": "Represents the properties of an Azure SQL Recommended Elastic Pool."
    },
    "RecommendedElasticPool": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecommendedElasticPoolProperties",
          "description": "Gets or sets the properites representing the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Represents an Azure SQL Recommended Elastic Pool."
    },
    "RecommendedElasticPoolListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecommendedElasticPool"
          },
          "description": "Gets or sets the list of Azure Sql Recommended Elastic Pools hosted in the server."
        }
      },
      "description": "Represents the response to a List Azure Sql Recommended Elastic Pool request."
    },
    "RecommendedElasticPoolListMetricsResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecommendedElasticPoolMetric"
          },
          "description": "Gets or sets the list of Azure Sql Recommended Elastic Pools metrics."
        }
      },
      "description": "Represents the response to a List Azure Sql Recommended Elastic Pool metrics request."
    },
    "RecommendedIndexUpdateProperties": {
      "properties": {
        "state": {
          "type": "string",
          "description": "Gets or sets requested index state. We execute or cancel index operations by altering index state. Allowed state transitions are :Active          -> Pending          - Start index creation processPending         -> Active           - Cancel index creationActive/Pending  -> Ignored          - Ignore index recommendation so it will no longer show in active recommendationsIgnored         -> Active           - Restore index recommendationSuccess         -> Pending Revert   - Revert index that has been createdPending Revert  -> Revert Canceled  - Cancel index revert operation"
        }
      },
      "description": "Update Azure Sql Database recommended index properties."
    },
    "RecommendedIndexUpdateParameters": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecommendedIndexUpdateProperties",
          "description": "Gets or sets the properties of the request."
        }
      },
      "required": [
        "properties"
      ],
      "description": "Update Sql Azure Database recommended index state."
    },
    "ReplicationLinkProperties": {
      "properties": {
        "partnerServer": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the name of the Azure SQL Server hosting the partner Azure SQL Database."
        },
        "partnerDatabase": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the name of the partner Azure SQL Database."
        },
        "partnerLocation": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the Azure Region of the partner Azure SQL Database."
        },
        "role": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the role of the Azure SQL Database in the replication link.",
          "enum": [
            "Primary",
            "Secondary",
            "NonReadableSecondary",
            "Source",
            "Copy"
          ],
          "x-ms-enum": {
            "name": "ReplicationRole",
            "modelAsString": true
          }
        },
        "partnerRole": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the role of the partner Azure SQL Database in the replication link.",
          "enum": [
            "Primary",
            "Secondary",
            "NonReadableSecondary",
            "Source",
            "Copy"
          ],
          "x-ms-enum": {
            "name": "ReplicationRole",
            "modelAsString": true
          }
        },
        "startTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Gets the start time for the replication link."
        },
        "percentComplete": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the percentage of seeding complete for the replication link."
        },
        "replicationState": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the replication state for the replication link.",
          "enum": [
            "PENDING",
            "SEEDING",
            "CATCH_UP",
            "SUSPENDED"
          ],
          "x-ms-enum": {
            "name": "ReplicationState",
            "modelAsString": true
          }
        }
      },
      "description": "Represents the properties of an Azure SQL Database Replication Link."
    },
    "ReplicationLink": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/ReplicationLinkProperties",
          "description": "Gets or sets the properties representing the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Represents an Azure SQL Database Replication Link."
    },
    "ReplicationLinkListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReplicationLink"
          },
          "description": "Gets or sets the list of Azure Sql Database Replication Links housed in the database."
        }
      },
      "description": "Represents the response to a List Azure Sql Database Replication Link request."
    },
    "DatabaseSecureConnectionPolicyCreateOrUpdateProperties": {
      "properties": {
        "securityEnabledAccess": {
          "type": "string",
          "description": "Gets or sets whether block direct access is applied."
        }
      },
      "description": "Create or update database secure connection policy parameters properties."
    },
    "DatabaseSecureConnectionPolicyCreateOrUpdateParameters": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/DatabaseSecureConnectionPolicyCreateOrUpdateProperties",
          "description": "Gets or sets the properties of the request."
        }
      },
      "required": [
        "properties"
      ],
      "description": "Create or update database secure connection policy parameters."
    },
    "DatabaseSecureConnectionPolicyProperties": {
      "properties": {
        "proxyDnsName": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the Data Security Proxy DNS name."
        },
        "proxyPort": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the Data Security Proxy port number."
        },
        "securityEnabledAccess": {
          "readOnly": true,
          "type": "string",
          "description": "Gets whether block direct access is applied."
        }
      },
      "description": "Represents the properties of an Azure SQL Database secure connection policy."
    },
    "DatabaseSecureConnectionPolicy": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/DatabaseSecureConnectionPolicyProperties",
          "description": "Represents the properties of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Represents an Azure SQL Database secure connection policy."
    },
    "ServerAdministratorCreateOrUpdateProperties": {
      "properties": {
        "login": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the Azure SQL Server Active Directory Administrator Login Value."
        },
        "sid": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the Azure SQL Server Active Directory Administrator Sid."
        },
        "administratorType": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the Azure SQL Server Active Directory Administrator Type."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the Azure SQL Server Active Directory Administrator tenant id."
        }
      },
      "required": [
        "login",
        "sid",
        "administratorType",
        "tenantId"
      ],
      "description": "Create or update Azure Server Active Directory Administrator parameters properties."
    },
    "ServerAdministratorCreateOrUpdateParameters": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServerAdministratorCreateOrUpdateProperties",
          "description": "Gets or sets the properties of the request."
        }
      },
      "required": [
        "properties"
      ],
      "description": "Create or update Azure SQL Server Active Directory Administrator parameters."
    },
    "ServerAdministratorProperties": {
      "properties": {
        "administratorType": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the type of Azure SQL Server Administrator."
        },
        "login": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the Azure SQL Server Administrator Login Value."
        },
        "sid": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the Azure SQL Server Administrator Sid."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the Azure SQL Server Active Directory Administrator tenant id."
        }
      },
      "required": [
        "tenantId"
      ],
      "description": "Represents the properties of an Azure SQL Server Administrator."
    },
    "ServerAdministrator": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServerAdministratorProperties",
          "description": "Gets or sets the properties representing the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Represents an Azure SQL Server Active Directory Administrator."
    },
    "ServerAdministratorListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerAdministrator"
          },
          "description": "Gets or sets the list of Azure SQL Server Active Directory Administrators for the server."
        }
      },
      "description": "Represents the response to a List Azure SQL Active Directory Administrators request."
    },
    "ServerCreateOrUpdateProperties": {
      "properties": {
        "version": {
          "type": "string",
          "description": "Gets or sets the version for the server being updated or created."
        },
        "administratorLogin": {
          "type": "string",
          "description": "Gets or sets the Administrator Login of the server being created."
        },
        "administratorLoginPassword": {
          "type": "string",
          "description": "Gets or sets the Administrator Login Password of the server being created or updated."
        }
      },
      "description": "Create or update server parameters properties."
    },
    "ServerCreateOrUpdateParameters": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServerCreateOrUpdateProperties",
          "description": "Gets or sets the properties of the request."
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Create or update server parameters."
    },
    "ServerProperties": {
      "properties": {
        "fullyQualifiedDomainName": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the fully qualified domain name of the server."
        },
        "version": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the version of the server."
        },
        "administratorLogin": {
          "readOnly": true,
          "type": "string",
          "description": "Gets administrator username for the server."
        },
        "administratorLoginPassword": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the administrator login password."
        }
      },
      "description": "Represents the properties of an Azure SQL Server."
    },
    "Server": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServerProperties",
          "description": "Represents the properties of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Represents an Azure SQL Server."
    },
    "ServerListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Server"
          },
          "description": "Gets or sets the list of Azure SQL Servers."
        }
      },
      "description": "Represents the response to a Get Azure SQL Server request."
    },
    "ServerMetric": {
      "properties": {
        "resourceName": {
          "type": "string",
          "description": "Gets or sets the name of the resource."
        },
        "displayName": {
          "type": "string",
          "description": "Gets or sets the metric display name."
        },
        "currentValue": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets the current value of the metric."
        },
        "limit": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets the current limit of the metric."
        },
        "unit": {
          "type": "string",
          "description": "Gets or sets the units of the metric."
        },
        "nextResetTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the next reset time for the metric."
        }
      },
      "description": "Represents Azure SQL Server metrics."
    },
    "ServerMetricListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerMetric"
          },
          "description": "Gets or sets the list of Azure SQL Server metrics for the server."
        }
      },
      "description": "Represents the response to a List Azure SQL Server metrics request."
    },
    "ServerUpgradeGetResult": {
      "properties": {
        "status": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the status of the Azure SQL Server Upgrade."
        },
        "scheduleUpgradeAfterTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Gets the schedule time of the Azure SQL Server Upgrade."
        }
      },
      "description": "Represents the response to a Get request for Upgrade status of an Azure SQL Server."
    },
    "RecommendedDatabaseProperties": {
      "properties": {
        "Name": {
          "type": "string",
          "description": "Gets or sets the name of the Azure SQL Database being upgraded."
        },
        "TargetEdition": {
          "type": "string",
          "description": "Gets or sets the target edition for the Azure SQL Database being upgraded."
        },
        "TargetServiceLevelObjective": {
          "type": "string",
          "description": "Gets or sets the target Service Level Objective for the Azure SQL Database being upgraded."
        }
      },
      "description": "Represents the properties of a recommended Azure SQL Database being upgraded."
    },
    "UpgradeRecommendedElasticPoolProperties": {
      "properties": {
        "Name": {
          "type": "string",
          "description": "Gets or sets the name of the Azure SQL Recommended Elastic Pool being upgraded."
        },
        "Edition": {
          "type": "string",
          "description": "Gets or sets the target edition for the Azure SQL Recommended Elastic Pool being upgraded."
        },
        "Dtu": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the DTU guarantee for the Azure SQL Recommended Elastic Pool being upgraded."
        },
        "StorageMb": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the storage limit in MB for the Azure SQL Recommended Elastic Pool being upgraded."
        },
        "DatabaseDtuMin": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the DTU guarantee for database for the Azure SQL Recommended Elastic Pool being upgraded."
        },
        "DatabaseDtuMax": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the DTU cap for database for the Azure SQL Recommended Elastic Pool being upgraded."
        },
        "DatabaseCollection": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets or sets the list of database names to be put in the Azure SQL Recommended Elastic Pool being upgraded."
        },
        "IncludeAllDatabases": {
          "type": "boolean",
          "description": "Gets or sets whether all databases to be put in the Azure SQL Recommended Elastic Pool being upgraded."
        }
      },
      "description": "Represents the properties of a Azure SQL Recommended Elastic Pool being upgraded."
    },
    "ServerUpgradeProperties": {
      "properties": {
        "Version": {
          "type": "string",
          "description": "Gets or sets the version for the Azure SQL Server being upgraded."
        },
        "ScheduleUpgradeAfterUtcDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the earliest time to upgrade the Azure SQL Server."
        },
        "DatabaseCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecommendedDatabaseProperties"
          },
          "description": "Gets or sets the collection of recommended database properties to upgrade the Azure SQL Server."
        },
        "ElasticPoolCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpgradeRecommendedElasticPoolProperties"
          },
          "description": "Gets or sets the collection of recommended elastic pool properties to upgrade the Azure SQL Server."
        }
      },
      "required": [
        "Version"
      ],
      "description": "Start Azure SQL Server Upgrade properties."
    },
    "ServerUpgradeStartParameters": {
      "properties": {
        "serverUpgradeProperties": {
          "$ref": "#/definitions/ServerUpgradeProperties",
          "description": "Gets or sets the properties of the Azure SQL Server Upgrade."
        }
      },
      "required": [
        "serverUpgradeProperties"
      ],
      "description": "Start Azure SQL Server Upgrade parameters."
    },
    "ServiceTierAdvisorListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceTierAdvisor"
          },
          "description": "Gets or sets the list of service tier advisors for specified database."
        }
      },
      "description": "Represents the response to a list service tier advisor request."
    },
    "ServiceObjectiveProperties": {
      "properties": {
        "serviceObjectiveName": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the name for the service objective."
        },
        "isDefault": {
          "readOnly": true,
          "type": "boolean",
          "description": "Gets whether the service level objective is the default service objective."
        },
        "isSystem": {
          "readOnly": true,
          "type": "boolean",
          "description": "Gets whether the service level objective is a system service objective."
        },
        "description": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the description for the service level objective."
        },
        "enabled": {
          "readOnly": true,
          "type": "boolean",
          "description": "Gets whether the service level objective is enabled."
        }
      },
      "description": "Represents the properties of an Azure SQL Database Service Objective."
    },
    "ServiceObjective": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServiceObjectiveProperties",
          "description": "Represents the properties of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Represents an Azure SQL Database Service Objective."
    },
    "ServiceObjectiveListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceObjective"
          },
          "description": "Gets or sets the list of Azure Sql Database Service Objectives."
        }
      },
      "description": "Represents the response to a Get Azure Sql Database Service Objectives request."
    },
    "TransparentDataEncryptionCreateOrUpdateProperties": {
      "properties": {
        "status": {
          "type": "string",
          "description": "Gets or sets the Azure Sql Database Transparent Data Encryption being updated."
        }
      },
      "description": "Create or update Azure Sql Database Transparent Data Encryption parameters properties."
    },
    "TransparentDataEncryptionCreateOrUpdateParameters": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/TransparentDataEncryptionCreateOrUpdateProperties",
          "description": "Gets or sets the properties of the request."
        }
      },
      "required": [
        "properties"
      ],
      "description": "Create or update Sql Azure Database Transparent Data Encryption parameters."
    },
    "TransparentDataEncryptionProperties": {
      "properties": {
        "status": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the status of the Azure SQL Database Transparent Data Encryption.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "TransparentDataEncryptionStates",
            "modelAsString": true
          }
        }
      },
      "description": "Represents the properties of an Azure SQL Database Transparent Data Encryption."
    },
    "TransparentDataEncryption": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/TransparentDataEncryptionProperties",
          "description": "Represents the properties of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Represents an Azure SQL Database Transparent Data Encryption ."
    },
    "TransparentDataEncryptionActivityProperties": {
      "properties": {
        "status": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the status of the Azure SQL Database.",
          "enum": [
            "Encrypting",
            "Decrypting"
          ],
          "x-ms-enum": {
            "name": "TransparentDataEncryptionActivityStates",
            "modelAsString": true
          }
        },
        "percentComplete": {
          "readOnly": true,
          "type": "number",
          "format": "float",
          "description": "Gets the percent complete of the transparent data encryption scan for a Azure SQL Database."
        }
      },
      "description": "Represents the properties of an Azure SQL Database Transparent Data Encryption Scan."
    },
    "TransparentDataEncryptionActivity": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/TransparentDataEncryptionActivityProperties",
          "description": "Represents the properties of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Represents an Azure SQL Database Transparent Data Encryption Scan."
    },
    "TransparentDataEncryptionActivityListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransparentDataEncryptionActivity"
          },
          "description": "Gets or sets the list of Azure Sql Database Transparent Data Encryption Activities."
        }
      },
      "description": "Represents the response to a List Azure Sql Database Transparent Data Encryption Activity request."
    },
    "Resource": {
      "description": "Resource properties",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        },
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "required": [
        "location"
      ],
      "x-ms-azure-resource": true
    },
    "SubResource": {
      "description": "Subresource properties",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource Id"
        }
      },
      "x-ms-azure-resource": true
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    },
    "ResourceGroupParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the Resource Group to which the resource belongs.",
      "x-ms-parameter-location": "method"
    },
    "ServerNameParameter": {
      "name": "serverName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the Azure SQL Server",
      "x-ms-parameter-location": "method"
    },
    "ServerNameParameterGeneric": {
      "name": "serverName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the Azure SQL Server",
      "x-ms-parameter-location": "method"
    }
  }
}